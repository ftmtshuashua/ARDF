apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId "com.lfp.androidrapiddevelopmentframework"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 4
        versionName "0.0.5"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }

        manifestPlaceholders = [
                MTA_CHANNEL  : "智者",
                MTA_APPKEY   : "AUFW43Z4G4VN",
                XG_ACCESS_ID : "2100296792",
                XG_ACCESS_KEY: "A2DQNYG4137N"
        ]

        ndk {
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a','x86'
        }
    }
    sourceSets{

    }
    signingConfigs{
        release{
            storeFile file("app_ardf_secretkey.jks")
            storePassword ""
            keyAlias "ardf"
            keyPassword ""
        }
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', '../ardf/proguard-rules.pro'
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', '../ardf/proguard-rules.pro'
            signingConfig signingConfigs.release

            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "ARDF_v${defaultConfig.versionName}_${defaultConfig.versionCode}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
                }
            }
        }
    }
    lintOptions {
        checkReleaseBuilds true
        abortOnError false
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    //gradlew assembleRelease

    /*批量打包配置*/
    flavorDimensions "market"
    productFlavors {
        ARDF { //官方包
            dimension "market"
            manifestPlaceholders = [
                    MTA_CHANNEL: "智者"
            ]
        }

        if (isMultiChannel.toBoolean()) {
            ARDF { //官方包
                dimension "market"
                manifestPlaceholders = [
                        MTA_CHANNEL: "智者"
                ]
            }
            HuaWei {
                dimension "market"
                manifestPlaceholders = [
                        MTA_CHANNEL: "华为"
                ]
            }
            _360 {
                dimension "market"
                manifestPlaceholders = [
                        MTA_CHANNEL: "360"
                ]
            }
            LiQu {
                dimension "market"
                manifestPlaceholders = [
                        MTA_CHANNEL: "厉趣"
                ]
            }
        }
    }
}

dependencies {
    implementation project(':ardf')
    implementation project(':gg_y')

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'jp.wasabeef:recyclerview-animators:2.3.0'
    implementation 'com.lfp.widget:SpringViewLibrary:1.1.3'
    implementation 'com.squareup.okhttp3:okhttp:3.2.0'
    implementation 'com.squareup.okio:okio:1.7.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.14-RC1'
    implementation 'com.artemzin.rxjava:proguard-rules:1.1.1.0'
    implementation 'com.google.code.gson:gson:2.8.2'
    /*腾讯统计相关*/
    implementation 'com.tencent.mid:mid:3.73-release'
    implementation 'com.qq.mta:mta:3.3.1-release'
//    implementation 'com.qq.visual:visual:3.3.1-release' 高级功能：可视化埋点
//    implementation 'com.orhanobut:logger:2.2.0'
    /*推送*/
    implementation 'com.tencent.xinge:xinge:3.2.3-release' //信鸽jar
    implementation 'com.tencent.wup:wup:1.0.0.E-release' //wup包
    implementation 'com.tencent.mid:mid:4.0.6-release'  //mid包

    implementation 'com.yanzhenjie:permission:2.0.0-rc8'

}

//获取当前时间
def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}
