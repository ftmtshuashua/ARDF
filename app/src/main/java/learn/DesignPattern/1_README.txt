知识点出自:<Head First 设计模式>

设计模式让你和其他开发人员之间有共同的知识,一旦知道了这些知识,和其他开发人员之间沟通就很容易.
设计模式也可以把你的思考架构的层次提高到模式层面,而不是仅停留在琐碎的对象上.

设计原则:
1.封装变化 - 找出应用中可能需要变化之处,把他们独立出来,不要和那些不需要变化的代码混在一起
2.针对接口编程,而不是针对实现编程
3.多用组合,少用继承
4.为了交互对象之间的松耦合设计而努力
5.开放关闭原则 - 类应该对扩展开放,对修改关闭
6.依赖抽象,不要依赖具体类
7.依赖倒置原则
    变量不可以持有具体类的引用   - 如果使用new,就会持有具体类的引用,你可以改用工厂来避开这样的做法
    不要让类派生自具体类         - 如果派生自具体类,你就会依赖具体类.请派生自一个抽象(接口或抽象类)
    不要覆盖基类中已实现的方法   - 如果覆盖基类中已实现的方法,那么你的基类就不是一个真正适合继承的抽象,基类中已实现的方法,应该由所有的子类共享
8.最少知识原则,只有你的密友交谈 - 减少对象之间的交互,只留下几个"密友"
9.好莱坞原则 - 别调用(打电话给)为们,我们会调用(打电话给)你. ,防止"依赖腐败".  如果需要调用高层,请使用钩子
10.一个类应该只有一个引起变化的原因



*不可能完全遵守这些原则,我们应该尽量达到这个原则.